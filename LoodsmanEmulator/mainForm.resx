<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="findButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABgmlDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhT8TxYOIhSlELLaIFqKNilhKFEVQCEkEr8LdjTkgu4bdiI2lYCtYeDRehY21tha2giB4gNjaWCna
        iKz/bIQEIYIDw3y8mfeYeQOBg7xpubXDYNlFJz4e1WZm57T6Z5oI0Ug3tbrpFqYSY0mqjo9batR606uy
        +N9oTi25JtRowsNmwSkKLwoPrhYLineEw2ZWTwmfCvc4ckHhe6UbJX5RnPE5oDLDTjI+IhwW1jIVbFSw
        mXUs4QHhSMqyJT8wU+KU4jXFVn7F/LmnemFoyZ5OKF1mB+NMMEUMDYMVcuQp0iurLYpLXPajVfztvj8m
        LkNcOUxxjLKMhe77UX/wu1s33d9XSgpFoe7J8946oX4LvjY97/PQ876OIPgIF3bZv3wAQ++ib5a1yD60
        rMPZZVkztuF8A9oeCrqj+1JQZiCdhtcT+aZZaL2GpvlSbz/7HN9BUrqavILdPejKSPZClXc3VPb25xm/
        P6Lfe95yqhRc0fAAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAHdElNRQfnCgwJKxXTjwSOAAABlklEQVQ4
        T51SUWrCUBDsYbyGnkMET+Cn5/AKHkEQVDRaFAQTKzamIFZsTIlJS1OiUWtja2H65jVCS1DaDiwZZnfn
        vc2+i++YzWbQdR2GYcggpxalz6NarWK1WuLBdaFpKvqaBtd1pFar1c6bsDkMQzQaDVwbYzx6Sxnk1Jhj
        TVT+E7yi53lQFAXuk49gs8P2JZRBTo051kwmk7jJcDiEZVm4Gd/KhnD/hsPhQwY5NeZYo6pq3KDb7WIw
        GODZX4tTX2XjEeTUPJFjTavViht0Oh2MRjr85UYU7+IG2x38YCs3Uq/X4wa9Xg+2bePOtBCsOcJeNjLI
        V0JjjjXtdjtuYJqmWJeLZqv59ePEiZsoyKldiquzZj6fxw2IUqmEvViVIlZm3dvi5HcZ5E2xAd/3UalU
        5BhRSxw0CYIAzmIhHpKGq6s+FoJTK5fLYqQDisXi+ZfJPfOfcF38Mjgin3WhUEA6nUYymYTjOKdNTmE6
        nSKRSCCXy/3fhCMdTVKplPyxUer3OJpks1nk8/m/GxC8fiaTEU8N+AQLOffdVDbYTgAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>